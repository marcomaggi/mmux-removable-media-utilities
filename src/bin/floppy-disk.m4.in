#
# Part of: MMUX Removable Media Utilities
# Contents: floppy disk control
# Date: Fri Jun  7, 2013
#
# Abstract
#
#
#
# Copyright (C) 2013, 2015, 2020 Marco Maggi <mrc.mgg@gmail.com>
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public  License as  published by  the Free Software  Foundation, either  version 3  of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that  it will be useful, but WITHOUT ANY WARRANTY; without
# even the  implied warranty of MERCHANTABILITY  or FITNESS FOR  A PARTICULAR PURPOSE.  See  the GNU
# General Public License for more details.
#
# You should  have received a copy  of the GNU General  Public License along with  this program.  If
# not, see <http://www.gnu.org/licenses/>.
#

#page
#### global variables

declare -r script_PROGNAME=floppy-disk
declare -r script_VERSION=0.3.0-devel.0
declare -r script_COPYRIGHT_YEARS='2013, 2020'
declare -r script_AUTHOR='Marco Maggi'
declare -r script_LICENSE=GPL
declare script_USAGE="usage: ${script_PROGNAME} [action] [options]"
declare script_DESCRIPTION='Perform floppy disk operations.'
declare script_EXAMPLES=

declare -r script_REQUIRED_MBFL_VERSION=v3.0.0-devel.4
declare -r COMPLETIONS_SCRIPT_NAMESPACE='p-mmux-removable-media-utilities'

### ------------------------------------------------------------------------

declare -r SCRIPT_ARGV0="$0"
declare -r DEFAULT_MOUNT_POINT='@DEFAULT_FLOPPY_DISK_MOUNT_POINT@'
declare -r DEFAULT_GROUP_NAME=
declare -r DEFAULT_DEVICE=/dev/fd/0
declare -r DEFAULT_LABEL=nolabel
declare -r DEFAULT_INODESIZE=1024

#page
#### library loading and imports

mbfl_library_loader
m4_include([[[common.m4]]])

#page
#### program declarations

# The program "mke2fs" comes with the "e2fsprogs" package.
mbfl_declare_program /sbin/mke2fs

# The program "superformat" comes with the "fdutils" package.
mbfl_declare_program superformat

#page
#### script actions declaration

DEFINE_MAIN_ACTIONS_TREE([[[floppy disk]]])

mbfl_declare_action MAIN FORMAT		NONE format		'Format a floppy disk.'
mbfl_declare_action MAIN SUDO_FORMAT	NONE sudo-format	'Internal action.'
mbfl_declare_action MAIN SUDO_MKFS	NONE sudo-mkfs		'Internal action.'

#page
#### core action functions

DEVICE_GENERIC_ACTIONS([[[floppy disk]]])

#page
#### script actions: device specific actions

function script_before_parsing_options_FORMAT () {
    script_USAGE="usage: ${script_PROGNAME} format [options]"
    script_DESCRIPTION='Format a floppy disk.  The device of integrated floppy drives
is something like "/dev/fd/0"; a pluggable USB floppy drive may
have device: "/dev/sdb".'
    mbfl_declare_option DEVICE    "$DEFAULT_DEVICE"    d  device    witharg 'Select the floppy disk device.'
    mbfl_declare_option LABEL     "$DEFAULT_LABEL"     l  label     witharg 'Select the device label.'
    mbfl_declare_option INODESIZE "$DEFAULT_INODESIZE" '' inodesize witharg 'Select the inode size.'
}

function script_action_FORMAT () {
    mbfl_local_varref(FLAGS)
    mbfl_getopts_gather_mbfl_options_var mbfl_datavar(FLAGS)

    mbfl_program_declare_sudo_user root
    if mbfl_program_exec "$SCRIPT_ARGV0" sudo-format "$script_option_DEVICE" $FLAGS
    then exit_success
    else
	mbfl_message_error 'error formatting the floppy disk'
	exit_failure
    fi
    mbfl_program_declare_sudo_user root
    if mbfl_program_exec "$SCRIPT_ARGV0" sudo-mkfs "$script_option_DEVICE" "$script_option_LABEL" "$script_option_INODESIZE" $FLAGS
    then exit_success
    else
	mbfl_message_error 'error creating file system on the floppy disk'
	exit_failure
    fi
}

### ------------------------------------------------------------------------

function script_action_SUDO_FORMAT () {
    if mbfl_wrong_num_args 1 $ARGC
    then
	mbfl_command_line_argument(DEVICE, 0)
	mbfl_local_varref(SUPERFORMAT)
	mbfl_program_found_var mbfl_datavar(SUPERFORMAT) superformat || exit $?
	mbfl_program_exec "$SUPERFORMAT" --verbosity 2 --superverify "$DEVICE" hd
    else
	mbfl_main_print_usage_screen_brief
	exit_failure
    fi
}

### ------------------------------------------------------------------------

function script_action_SUDO_MKFS () {
    if mbfl_wrong_num_args 3 $ARGC
    then
	mbfl_command_line_argument(DEVICE,    0)
	mbfl_command_line_argument(LABEL,     1)
	mbfl_command_line_argument(INODESIZE, 2)
	mbfl_local_varref(MKE2FS)
	mbfl_program_found_var mbfl_datavar(MKE2FS) /sbin/mke2fs || exit $?
	mbfl_program_exec "$MKE2FS" -c -i "$INODESIZE" -L "$LABEL" "$DEVICE"
    else
	mbfl_main_print_usage_screen_brief
	exit_failure
    fi
}

#page
#### let's go

mbfl_main

### end of file
# Local Variables:
# mode: sh
# End:
